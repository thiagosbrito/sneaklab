# A string used to distinguish different Supabase projects on the same machine.
# Not required if you have a single project.
project_id = "sneaklab"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API endpoints.
# public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returned from a table or view. Limits payload size for accidental or malicious requests.
max_rows = 1000

[api.tls]
enabled = false

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW server_version;`
# on the remote database to check.
major_version = 15

[db.pooler]
enabled = false
# Port to use for the local connection pooler.
port = 54329
# Specifies when a server connection can be reused by other clients.
# Configure one of the supported pooler modes: `transaction`, `session`.
pool_mode = "transaction"
# How many server connections to allow per user/database pair.
default_pool_size = 20
# Maximum number of client connections allowed.
max_client_conn = 100

[realtime]
enabled = true
# Bind realtime via either IPv4 or IPv6. (default: IPv6)
# ip_version = "IPv6"
# The maximum length of HTTP request headers. (default: 4096)
# max_header_length = 4096

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://127.0.0.1:54321"
# OpenAI API Key to use for Supabase AI.
openai_api_key = "env(OPENAI_API_KEY)"

# Email testing server. Emails sent with the local dev setup are not actually sent - they are logged in the terminal.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails sent by Supabase Auth.
# site_url = "http://127.0.0.1:3000"
additional_redirect_urls = ["https://127.0.0.1:3000"]
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
# redirect_urls = ["https://127.0.0.1:3000/**"]
# JWT expiry, for example 30m, 1h
jwt_expiry = 3600
# Allow/disallow new user signups to your project.
enable_signup = true
# Allow/disallow anonymous sign-ins to your project.
enable_anonymous_sign_ins = false
# Allow/disallow testing manual linking of accounts
enable_manual_linking = false

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Uncomment to customize email template
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = false
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false
# No SMS provider needed since we're using WhatsApp Business API directly
# provider = "disabled"

# Use pre-defined map of phone number to OTP for testing.
[auth.sms.test_otp]
"4152127777" = "123456"

# Configure logged in session timeouts.
# [auth.sessions]
# Force log out after the given duration.
# timebox = "24h"
# Force log out if the user has been inactive longer than the given duration.
# inactivity_timeout = "8h"

# Configure one or more external auth providers: apple, azure, bitbucket,
# discord, facebook, github, gitlab, google, keycloak, linkedin_oidc, notion, twitch,
# twitter, slack, spotify, workos, zoom.
[auth.external.apple]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_APPLE_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_APPLE_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_APPLE_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_APPLE_URL)"

[auth.external.azure]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_AZURE_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_AZURE_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_AZURE_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_AZURE_URL)"

[auth.external.bitbucket]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_BITBUCKET_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_BITBUCKET_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_BITBUCKET_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_BITBUCKET_URL)"

[auth.external.discord]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_DISCORD_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_DISCORD_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_DISCORD_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_DISCORD_URL)"

[auth.external.facebook]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_FACEBOOK_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_FACEBOOK_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_FACEBOOK_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_FACEBOOK_URL)"

[auth.external.github]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_GITHUB_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_GITHUB_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_GITHUB_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_GITHUB_URL)"

[auth.external.gitlab]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_GITLAB_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_GITLAB_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_GITLAB_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_GITLAB_URL)"

[auth.external.google]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_GOOGLE_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_GOOGLE_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_GOOGLE_URL)"

[auth.external.keycloak]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_KEYCLOAK_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_KEYCLOAK_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_KEYCLOAK_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_KEYCLOAK_URL)"

[auth.external.linkedin_oidc]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_LINKEDIN_OIDC_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_LINKEDIN_OIDC_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_LINKEDIN_OIDC_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_LINKEDIN_OIDC_URL)"

[auth.external.notion]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_NOTION_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_NOTION_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_NOTION_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_NOTION_URL)"

[auth.external.twitch]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_TWITCH_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_TWITCH_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_TWITCH_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_TWITCH_URL)"

[auth.external.twitter]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_TWITTER_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_TWITTER_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_TWITTER_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_TWITTER_URL)"

[auth.external.slack]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_SLACK_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_SLACK_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_SLACK_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_SLACK_URL)"

[auth.external.spotify]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_SPOTIFY_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_SPOTIFY_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_SPOTIFY_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_SPOTIFY_URL)"

[auth.external.workos]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_WORKOS_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_WORKOS_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_WORKOS_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_WORKOS_URL)"

[auth.external.zoom]
enabled = false
client_id = "env(SUPABASE_AUTH_EXTERNAL_ZOOM_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_EXTERNAL_ZOOM_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "env(SUPABASE_AUTH_EXTERNAL_ZOOM_REDIRECT_URI)"
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = "env(SUPABASE_AUTH_EXTERNAL_ZOOM_URL)"

[analytics]
enabled = false
port = 54327
# Configure one of the supported backends: `postgres`, `bigquery`.
backend = "postgres"

# Experimental features may be deprecated without a major version bump
[experimental]
# Configures Postgres storage-engine with ReadReplica capability
# [experimental.read_replicas.database]
# [experimental.read_replicas.database.aws]
# supported regions: eu-west-1, ap-southeast-1, ap-northeast-1, us-west-1
# region = "us-west-1"
# Custom endpoint is supported
# endpoint = "0.0.0.0:54322"
